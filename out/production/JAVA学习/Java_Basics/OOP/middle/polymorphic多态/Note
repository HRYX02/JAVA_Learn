面向对象特征之三：多态性
1 理解：可以理解为一个事物的多种形态
2 什么是多态性？
    对象的多态性：父类的引用指向子类的对象(子类的对象赋给父类引用)
3 多态的使用：虚拟方法调用
    有了对象的多态性以后，我们在编译期，只能调用父类中声明的方法，但在运行期，实际执行的是子类重写父类的方法
    总结：编译看左边；运行看右边
4 多态性使用前提
    (1) 类的继承关系 (2) 方法的重写
5 对象的多态性只适用于方法，不适用于属性(编译和运行都看左边)
6 instanceof关键字
    1 a instanceof A:判断对象a是否是类A的实例，如果是返回true，否则返回false
    2 使用情景：为了避免在向下转型时出现ClassCastException的异常，我们在向下转型之前，
              先进行instanceof的判断，一旦返回true，就进行向下转型。否则不进行
              30-38行
    3 如果a instanceof A返回true，则a instanceof B也返回true
      其中类B是类A的父类
7 练习：
    1.若子类重写了父类方法，就意味着子类里定义的方法彻底覆盖了父类里的同名方法，
      系统将不可能把父类里的方法转移到子类中：编译看左边，运行看右边
    2.对于实例变量则不存在这样的现象，即使子类里定义了与父类完全相同的实例变量，
      这个实例变量依然不可能覆盖父类中定义的实例变量：编译运行都看左边