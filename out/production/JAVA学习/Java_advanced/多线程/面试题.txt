synchronized 和 lock 的异同
    同：都可解决线程安全
    异：synchronized机制在执行完相应的同步代码后，自动的释放同步监视器
        lock需要手动的启动同步（lock()），同时结束同步也需要手动的实现（unlock()）

如何解决线程安全问题？几种方式
    同步方法、同步代码块、lock锁

sleep() 和 wait()的异同
    同：一旦执行方法，都可以是当前线程进入阻塞状态
    异：
        1 两方法声明的位置不同：sleep()在Thread类中声明，wait()在Object类中声明
        2 调用的范围/要求不同：sleep()可在任何需要的场景调，wait()必须使用在同步代码块或同步方法中
        3 关于释放释放同步监视器：如果两个方法都使用在同步代码块或同步方法中sleep()不会释放，wait()会释放